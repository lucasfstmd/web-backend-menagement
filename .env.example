#################################################################################################
#######################################  EXECUTION SETUP  #######################################
#################################################################################################

# NODE_ENV:                 development - execute the platform in development environment
#                           test - execute the platform in test environment
#                           production - execute the platform in production environment
#                           default value: development
NODE_ENV=development

#################################################################################################
####################################### ACCOUNT API SETUP #######################################
#################################################################################################

# PORT_HTTP:                Port used by the ACCOUNT service to listen for HTTP request.
#                           default value: 3000
PORT_HTTP=4000

# PORT_HTTPS:               Port used to listen for HTTPS request
#                           default value: 3001
PORT_HTTPS=4001

#################################################################################################
####################################### CERTIFICATES/KEYS #######################################
#################################################################################################

# SSL_CERT_PATH:            Certificate SSL
#                           default value: ./.certs/server_cert.pem
#
#                           To generate self-signed certificates,
#                           use the ./create-self-signed-certs.sh script.
SSL_CERT_PATH=./.certs/server_cert.pem

# SSL_KEY_PATH:             Private key for SSL certificate
#                           default value: ./.certs/server_key.pem
#
#                           To generate self-signed certificates,
#                           use the ./create-self-signed-certs.sh script.
SSL_KEY_PATH=./.certs/server_key.pem

#################################################################################################
######################################## DATABASES SETUP ########################################
#################################################################################################

# MONGODB_URI:              Database connection URI used by the ACCOUNT service for connecting to
#                           a MongoDB instance if the application is running in development or
#                           production environment (NODE_ENV=development or NODE_ENV=production).
#                           default value: mongodb://localhost:27017/account-service
# MONGODB_URI=mongodb://bi.back.app:zNYUc52VCtU3@10.10.253.106:27018/bi-fuels?ssl=true
MONGODB_URI=mongodb://localhost:27017/files

# MONGODB_URI_TEST:         Database connection URI used by the ACCOUNT service for connecting to
#                           a MongoDB instance if the application is running test environment
#                           (NODE_ENV=test).
#                           default value: mongodb://localhost:27017/data-cross-service-test
MONGODB_URI_TEST=mongodb://localhost:27017/files

# MONGODB_ENABLE_TLS:       Enables/Disables connection to TLS
#                           When TLS is used for connection, client certificates
#                           are required (MONGODB_KEY_PATH, MONGODB_CA_PATH).
#
#                           default value: false
MONGODB_ENABLE_TLS=false

# MONGODB_KEY_PATH:         Client certificate and key in .pem format to connect to MongoDB
#                           default value: .certs/mongodb/mongodb.pem
MONGODB_KEY_PATH=.certs/mongodb/mongodb.pem

# MONGODB_CA_PATH:          MongoDB Certificate of the Authentication entity (CA)
#                           default value: .certs/mongodb/client.pem
MONGODB_CA_PATH=.certs/mongodb/ca.pem
